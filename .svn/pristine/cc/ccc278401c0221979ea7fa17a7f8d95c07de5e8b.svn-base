<?php 
	require_once BLOGIC."/BLogic.php"; 
	require_once ROOT."/Components/Controllers/SessionController.php";
	require_once BLOGIC."/Utils/FormUtils.php";
		
	class PageWrapper extends SessionController 
	{ 
		protected $innerTemplate;
		protected $hasInvalidTransactionID = false;
		
		public $errorMessage;
		public $alertMessage;
		protected $currentInvestmentPortfolio;
		
		public function __construct($formData, $innerTemplate) 
		{ 
			parent::__construct($formData, "PageWrapper"); 
			$this->innerTemplate = $this->templateForName($innerTemplate);
			$this->innerTemplate->set("controller", $this);
            
            flushJS();
            addJS("js/ajax.js");
		} 
		
		// prevent page reloads and back button from repeating previous actions.
		public function handleRequest()
		{
			$page = parent::handleRequest();
			if ($page)
				return $page;
			if (empty($_SESSION["transactionID"]) || $this->formValueForKey("transactionID") != $_SESSION["transactionID"])
			{
				$this->hasInvalidTransactionID = true;
			}
			$_SESSION["transactionID"] = uniqid();
		}
		
		public function renderInnerTemplate()
		{
			echo $this->innerTemplate->fetch();
		}
		
		public function hasInvalidTransactionID()
		{
			return $this->hasInvalidTransactionID;
		}
		
		public function formMethod()
		{
			return "post";
		}
		
		public function currentInvestmentPortfolio(){
			if (! $this->currentInvestmentPortfolio)
			{
				$id = $_SESSION["investmentPortfolioID"];
				debugln("investment port id: " . $id);
				if ($id) {
					$this->currentInvestmentPortfolio = BLGenericRecord::recordMatchingKeyAndValue("InvestmentPortfolio", "investmentPortfolioID", $id);
				}
			}
			return $this->currentInvestmentPortfolio;
		}
	} 
?>
